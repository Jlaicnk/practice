# Generated by Django 5.1.3 on 2025-05-11 22:46

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="SysUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="用户名"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="密码")),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars/",
                        verbose_name="用户头像",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, null=True, unique=True, verbose_name="用户邮箱"
                    ),
                ),
                (
                    "phonenumber",
                    models.CharField(
                        max_length=11,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="手机号格式错误", regex="^1[3-9]\\d{9}$"
                            )
                        ],
                        verbose_name="手机号码",
                    ),
                ),
                (
                    "login_date",
                    models.DateField(
                        auto_now=True, null=True, verbose_name="最后登录时间"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="账号状态（启用/禁用）"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="是否为管理员"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="是否为超级管理员"),
                ),
                (
                    "created_time",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_time",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="更新时间"
                    ),
                ),
                (
                    "remarks",
                    models.TextField(max_length=500, null=True, verbose_name="备注"),
                ),
                (
                    "preferences",
                    models.JSONField(
                        default=list,
                        help_text="例如：['dark_mode', 'notifications']",
                        null=True,
                        verbose_name="用户偏好（数组）",
                    ),
                ),
                (
                    "graph_data",
                    models.JSONField(
                        default=dict,
                        help_text="自定义 JSON 结构数据",
                        null=True,
                        verbose_name="用户导入图谱数据（JSON）",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户管理",
                "db_table": "sys_user",
                "ordering": ["-created_time"],
            },
        ),
    ]
